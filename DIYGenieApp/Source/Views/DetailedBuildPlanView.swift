//
//  DetailedBuildPlanView.swift
//  DIYGenieApp
//
//  Displays a full step-by-step DIY plan generated by AI.
//  Updated: 2025-11-01
//

import SwiftUI

struct DetailedBuildPlanView: View {
    let plan: PlanResponse?
    let completedSteps: [Int]
    
    init(plan: PlanResponse?, completedSteps: [Int] = []) {
        self.plan = plan
        self.completedSteps = completedSteps
    }

    var body: some View {
        ZStack {
            LinearGradient(
                colors: [
                    Color(red: 28/255, green: 26/255, blue: 40/255),
                    Color(red: 58/255, green: 35/255, blue: 110/255)
                ],
                startPoint: .top,
                endPoint: .bottom
            )
            .ignoresSafeArea()

            if let plan = plan {
                ScrollView {
                    VStack(alignment: .leading, spacing: 22) {
                        
                        // MARK: - Header
                        HStack {
                            Button(action: {
                                // Add back navigation if needed
                            }) {
                                Image(systemName: "chevron.left")
                                    .foregroundColor(.white)
                                    .font(.system(size: 18, weight: .semibold))
                            }
                            Spacer()
                        }

                        Text(plan.summary ?? "Detailed Build Plan")
                            .font(.system(size: 30, weight: .bold))
                            .foregroundColor(.white)
                            .padding(.bottom, 4)

                        if let summary = plan.summary {
                            Text(summary)
                                .foregroundColor(.white.opacity(0.7))
                                .font(.subheadline)
                                .padding(.bottom, 10)
                        }

                        // MARK: - Progress bar
                        if let steps = plan.steps {
                            let total = steps.count
                            let progress = Double(completedSteps.count) / Double(max(total, 1))
                            
                            VStack(alignment: .leading) {
                                ProgressView(value: progress)
                                    .tint(Color.purple)
                                Text("\(completedSteps.count) of \(total) steps complete")
                                    .font(.caption)
                                    .foregroundColor(.white.opacity(0.7))
                            }
                            .padding(.bottom, 12)
                        }

                        // MARK: - Steps
                        if let steps = plan.steps, !steps.isEmpty {
                            VStack(alignment: .leading, spacing: 16) {
                                ForEach(steps.indices, id: \.self) { index in
                                    let step = steps[index]
                                    VStack(alignment: .leading, spacing: 6) {
                                        Text("Step \(index + 1): \(step.title ?? "Untitled")")
                                            .font(.headline)
                                            .foregroundColor(.white)
                                        
                                        if let details = step.instructions {
                                            Text(details)
                                                .font(.body)
                                                .foregroundColor(.white.opacity(0.8))
                                        }
                                    }
                                    .padding()
                                    .background(Color.white.opacity(0.08))
                                    .cornerRadius(12)
                                }
                            }
                            .padding(.top, 8)
                        } else {
                            Text("No steps available.")
                                .foregroundColor(.white.opacity(0.7))
                                .italic()
                        }

                        Spacer(minLength: 40)
                    }
                    .padding(.horizontal, 20)
                    .padding(.top, 20)
                }
            } else {
                VStack(spacing: 12) {
                    ProgressView()
                        .progressViewStyle(CircularProgressViewStyle(tint: .white))
                    Text("Loading plan...")
                        .foregroundColor(.white.opacity(0.8))
                        .font(.system(size: 16))
                }
            }
        }
        .preferredColorScheme(.dark)
    }
}
